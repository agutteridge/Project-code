delimiter //
CREATE PROCEDURE init ()
BEGIN
	SELECT DISTINCT C1.CUI AS 'CHILD_CUI', MRREL.CUI2 AS 'PAR_CUI'
	FROM MRCONSO AS C1
	INNER JOIN MRREL ON MRREL.CUI1 = C1.CUI
	INNER JOIN MRCONSO C2 ON C2.CUI = MRREL.CUI2
	WHERE C1.CUI IN ('C0069515', 'C0008659')
	AND (MRREL.RELA='inverse_isa'
	OR MRREL.REL = 'PAR'
	OR MRREL.REL = 'RB');
END//
delimiter;

delimiter //
CREATE PROCEDURE `getrels`(
	IN cui_list STRINGARRAY
	OUT par_list STRINGARRAY)
BEGIN
	INSERT INTO RESULTS (CHILD_CUI, STR, PAR_CUI)  
	SELECT C1.CUI AS 'CHILD_CUI', C1.STR AS 'STR', MRREL.CUI2 AS 'PAR_CUI'
	FROM (SELECT C2.CUI, MAX(R2.RANK) AS MAXRANK
		FROM MRCONSO AS C2 
		INNER JOIN MRRANK AS R2 ON (C2.SAB = R2.SAB AND C2.TTY = R2.TTY)
		INNER JOIN TEMP_RESULTS AS T ON T.PAR_CUI = C2.CUI
		GROUP BY C2.CUI) AS T 
	INNER JOIN MRRANK R1 ON R1.RANK = T.MAXRANK
	INNER JOIN MRCONSO C1 ON (C1.SAB = R1.SAB AND C1.TTY = R1.TTY)
	INNER JOIN MRREL ON MRREL.CUI1 = C1.CUI
	WHERE C1.CUI = T.CUI
	AND (MRREL.RELA='inverse_isa'
	OR MRREL.REL = 'PAR'
	OR MRREL.REL = 'RB')
		ON DUPLICATE KEY UPDATE (CHILD_CUI, PAR_CUI);

	INSERT INTO RESULTS (CHILD_CUI, STR, PAR_CUI)
	SELECT T.CHILD_CUI, T.STR, T.PAR_CUI
	FROM TEMP_RESULTS AS T
		ON DUPLICATE KEY UPDATE (CHILD_CUI, PAR_CUI);
END//
delimiter;



1. already got names and Ids of children.
2. retrieve IDs of 1-parents (MRREL)
3. retrieve names of 1-parents and IDs of 2-parents
4. retrieve names of 2-parents